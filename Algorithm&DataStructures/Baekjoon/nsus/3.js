// 야구의 규칙은 다음과 같습니다.

// 타자는 홈플레이트에서 투수가 던진 공을 타격하여 단타(1루타), 2루타, 3루타를 쳐서 각각 1루, 2루, 3루로 진루할 수 있습니다.

// 홈런을 치면 한꺼번에 1, 2, 3루를 돌아 홈플레이트로 돌아올 수 있습니다.

// 혹은 볼넷(Base on Balls)을 얻어 1루까지 진루할 수 있습니다.

// 선행주자(이미 1루 혹은 2루 혹은 3루에 나가있는 주자)가 있는 경우 타자가 안타를 치면 안타의 종류에 따라

// 단타(1루타)인 경우 추가로 한 베이스를(예를들어, 2루에 있었으면 3루까지), 2루타를 치면 두 베이스, 3루타를 치면 세 베이스를 진루할 수 있습니다.

// 타자가 홈런을 치면 모든 선행주자가 홈플레이트로 돌아올 수 있습니다.

// 볼넷인 경우 타자가 1루로 진루하게 되는데, 만약 1루에 선행주자가 있었다면 1루 선행주자는 2루로, 2루에도 선행주자가 있었다면 2루 선행주자는 3루로, 3루에도 선행주자가 있었다면 3루 선행주자는 홈플레이트로 각각 한 베이스를 더 진루하게 됩니다.

// 단, 안타와 다르게 n-1 루에 있던 주자가 n 루로 이동하게 되어 n 루에 있던 주자가 n+1 루로 밀려나게 되는 상황이 아니라면 n 루 선행주자의 진루는 이뤄지지 않습니다.

// 예를들어 타자가 볼넷을 얻었을 때 선행주자가 1, 3루에 있었다면, 타자는 1루로, 1루에 있던 선행주자는 2루로 이동하지만, 2루에는 선행주자가 없었으므로 3루에 있던 주자는 밀려나야 하는 상황이 아니므로 3루에 계속 있게 됩니다.

// 한명의 주자가 1루, 2루, 3루를 돌아 홈플레이트로 돌아오면 1점이 발생합니다.

// 정리하자면 다음과 같습니다.

// 타자에게 발생할 수 있는 event
// 단타(1루타) : 타자주자는 1루, 선행주자들은 +1 루 진루.
// 2루타: 타자주자는 2루, 선행주자들은 +2루 진루.
// 3루타: 타자주자는 3루. 선행주자들은 +3루 진루.
// 홈런: 타자주자는 1,2,3루를 거쳐 홈플레이트로 돌아오고, 선행주자들도 모두 홈플레이트로 돌아옴.
// 볼넷: 타자주자는 1루까지 진루. 선행주자들은 이전루(n-1루) 주자에게 밀려나는 경우에만 +1루 진루.
// 점수
// 1명의 주자가 1, 2, 3루를 돌아 홈플레이트로 돌아오면 1점. 2명이면 2점.. n 명이면 n 점.
// P 팀과 C 팀이 야구 경기를 합니다.

// P 팀이 선공(Top), C 팀이 후공(Bottom) 입니다.

// 경기는 5회까지 진행하며 P 팀은 1회초, 2회초, 3회초, 4회초, 5회초에 공격을 합니다. C 팀은 1회말, 2회말, 3회말, 4회말, 5회말에 공격을 합니다.

// 입력값으로 각 회별로 발생한 각 팀의 공격 event 들이 주어집니다.

// 각 공격 event 는 다음과 같은 약자로 정의됩니다.

// 단타(1루타): h1
// 2루타: h2
// 3루타: h3
// 홈런: hr
// 볼넷: bb

// =====      // 길이 5. 공수전환을 의미합니다. 1회초에도 주어집니다. (1회초 P팀의 공격 시작)
// h3         // 3루타. 타자 3루까지 진루.
// =====      // 공수전환. P 팀 주자는 3루까지 갔지만 홈플레이트로 돌아오지 못하고 공수 전환. 점수 0:0 (1회말 C팀 공격 시작)
// bb         // 볼넷. 타자 1루까지 진루.
// h2         // 2루타. 타자는 2루까지, 선행주자는 3루까지 진루.
// bb         // 볼넷. 타자는 1루까지 진루. 2,3 루에 있던 선행주자는 밀려나지 않았으므로 이동하지 않음.
// =====      // 공수전환. C 팀 주자들이 만루를 채웠으나(1,2,3루에 모두 있었음) 추가 공격 event 가 발생하지 않아 홈플레이트로 들어오지 못함. 점수 0:0 (2회초 P팀 공격 시작)
// bb         // 볼넷. 타자 1루까지 진루.
// hr         // 홈런. 선행주자와 타자가 모두 홈플레이트로 돌아옴. P팀 2점 획득.
// =====      // 공수전환. 점수 2:0 (2회말 C팀 공격 시작)
// =====      // 공수전환. C팀이 아무런 공격 event 를 만들어내지 못함. 점수 2:0 (3회초 P팀 공격 시작)
// =====      // 공수전환. P팀이 아무런 공격 event 를 만들어내지 못함. 점수 2:0 (3회말 C팀 공격 시작)
// h1         // 단타. 타자가 1루까지 진루.
// bb         // 볼넷. 타자는 1루까지, 1루주자는 2루까지 진루.
// bb         // 볼넷. 타자는 1루까지, 1루주자는 2루까지, 2루주자는 3루까지 진루.
// bb         // 볼넷. 타자는 1루까지, 2루주자는 2루까지, 2루주자는 3루까지, 3루주자는 홈플레이트로 돌아옴. C팀 1점 발생. 점수 2:1
// =====      // 공수전환. 점수 2:1 (4회초 P팀 공격 시작)
// h2         // 2루타. 타자 2루까지 진루.
// h2         // 2루타. 타자 2루까지 진루. 2루 선행주자는 +2 베이스 이동하여 홈플레이트로 돌아옴. P 팀 1점 획득. 점수 3:1
// =====      // 공수전환. 점수 3:1 (4회말 C팀 공격 시작)
// =====      // 공수전환. C팀이 아무런 공격 event 를 만들어내지 못함. 점수 3:1 (5회초 P팀 공격 시작)
// hr         // 홈런. 타자가 홈플레이트로 돌아옴. P팀 1점 획득. 점수 4:1
// =====      // 공수전환. 점수 4:1 (5회말 C팀 공격 시작)
// h2         // 2루타. 타자 2루까지 진루.
// bb         // 볼넷. 타자는 1루까지 진루. 선행주자는 밀려나지 않았으므로 2루에 그대로.
// bb         // 볼넷. 타자는 1루까지, 1루 선행주자는 2루까지, 2루 선행주자는 3루까지 이동.
// hr         // 홈런. 타자를 포함하여 1,2,3루에 있던 선행주자가 모두 홈플레이트로 돌아옴. C팀 4점 획득. 점수 4:5
// =====      // 게임 종료.

const input = require("fs").readFileSync("./example.txt", "utf8");
const events = input.split("\r\n");

const GAME_END_COUNT = 11;
const INIT_BASE = [false, false, false];

const score = [0, 0];
let offenceTeam = -1;
let count = 0;
let base = [...INIT_BASE];

const adv = (count) => {
  base.unshift(count === 0 ? true : false);
  if (base.pop()) score[offenceTeam] += 1;
};

const bb = (number) => {
  if (number === 3) {
    score[offenceTeam] += 1;
    return;
  }
  if (number !== 0) base[number - 1] = false;
  if (base[number]) adv(number + 1);
  base[number] = true;
};

const initBase = () => {
  base = [...INIT_BASE];
};

const homerun = () => {
  score[offenceTeam] += base.filter((v) => v).length + 1;
};

const transition = () => {
  count++;
  offenceTeam = count % 2 === 1 ? 0 : 1;
};

events.forEach((e) => {
  if (count === GAME_END_COUNT) return;

  switch (e) {
    case "h1":
      adv(0);
      break;
    case "h2":
      for (let i = 0; i < 2; i++) {
        adv(i);
      }
      break;
    case "h3":
      for (let i = 0; i < 3; i++) {
        adv(i);
      }
      break;
    case "hr":
      homerun();
      initBase();
      break;
    case "bb":
      bb(0);
      break;
    case "=====":
      transition();
      initBase();
      break;
  }
});

console.log(score.join(":"));
